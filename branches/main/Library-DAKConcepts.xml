<?xml version="1.0" encoding="UTF-8"?>

<Library xmlns="http://hl7.org/fhir">
  <id value="DAKConcepts"/>
  <text>
    <status value="generated"/><div xmlns="http://www.w3.org/1999/xhtml"><h2>Related Artifacts</h2><table class="grid"><tr><td>depends-on</td><td><code>http://hl7.org/fhir/Library/FHIR-ModelInfo|4.0.1</code></td></tr><tr><td>depends-on</td><td><code>http://hl7.org/fhir/Library/FHIRHelpers|4.0.1</code></td></tr><tr><td>depends-on</td><td><a href="Bundle-KEMRBundle.html">FHIRCommon (version 4.0.1)</a></td></tr><tr><td>depends-on</td><td><a href="http://hl7.org/fhir/R4/codesystem-snomedct.html">SNOMED CT (all versions)</a></td></tr><tr><td>depends-on</td><td><a href="http://terminology.hl7.org/5.2.0/CodeSystem-v3-loinc.html">Logical Observation Identifiers, Names and Codes (LOINC)</a></td></tr><tr><td>depends-on</td><td><a href="http://terminology.hl7.org/5.2.0/CodeSystem-v3-rxNorm.html">RxNorm</a></td></tr><tr><td>depends-on</td><td><a href="CodeSystem-DAKICD11.html">ICD-11 codes from the HIV DAK</a></td></tr><tr><td>depends-on</td><td><a href="CodeSystem-CIEL.html">CIEL</a></td></tr><tr><td>depends-on</td><td><code>https://openhie.org</code></td></tr><tr><td>depends-on</td><td><a href="CodeSystem-DAKDispensingQuantityCS.html">DAKDispensingQuantityCS</a></td></tr><tr><td>depends-on</td><td><a href="CodeSystem-DAKCoarseAgeRangeCS.html">DAKCoarseAgeRangeCS</a></td></tr><tr><td>depends-on</td><td><a href="http://hl7.org/fhir/R4/valueset-administrative-gender.html">AdministrativeGender</a></td></tr><tr><td>depends-on</td><td><code>https://path-global-health.github.io/MERindicators/ValueSet/AgeRangesTXCURR</code></td></tr><tr><td>depends-on</td><td><code>https://path-global-health.github.io/MERindicators/ValueSet/ViralLoadTest</code></td></tr><tr><td>depends-on</td><td><a href="ValueSet-DAKPLHIV.html">WHO HIV Clinical Stages</a></td></tr><tr><td>depends-on</td><td><a href="ValueSet-DAKMMD.html">DAK Multi-Month Dispense codes</a></td></tr><tr><td>depends-on</td><td><a href="ValueSet-DAKONART.html">DAK Codes for On ART</a></td></tr><tr><td>depends-on</td><td><a href="ValueSet-DAKHIVTransfer.html">DAK Codes for Transfer in for HIV Care</a></td></tr><tr><td>depends-on</td><td><a href="ValueSet-DAKARVDrugPickup.html">DAK Drug Pickup Appointment codes</a></td></tr><tr><td>depends-on</td><td><a href="ValueSet-DAKARTMeds.html">ART medications</a></td></tr><tr><td>depends-on</td><td><a href="ValueSet-DAKDispensingQuantity.html">DAKDispensingQuantity</a></td></tr><tr><td>depends-on</td><td><a href="ValueSet-DAKCoarseAgeRange.html">DAKCoarseAgeRange</a></td></tr><tr><td>depends-on</td><td><a href="ValueSet-DAKARTStop.html">DAK Codes for ART Stopped</a></td></tr><tr><td>depends-on</td><td><a href="ValueSet-DAKHIVTransfer.html">DAK Codes for Transfer in for HIV Care</a></td></tr></table><h2>Contents</h2><p><code>text/cql</code></p><pre><code class="language-sql">library DAKConcepts version '0.1.0'

using FHIR version '4.0.1'

include FHIRHelpers version '4.0.1'
include FHIRCommon version '4.0.1' called FC

// codesystems
codesystem &quot;SNOMED-CT&quot;: 'http://snomed.info/sct'
codesystem &quot;LOINC&quot;: 'http://loinc.org'
codesystem &quot;RxNorm&quot;: 'http://www.nlm.nih.gov/research/umls/rxnorm'
codesystem &quot;ICD-11&quot;: 'http://hl7.org/fhir/sid/icd-11'

// local codesystems
codesystem &quot;CIEL&quot;: 'https://openconceptlab.org/orgs/CIEL/sources/CIEL'
codesystem &quot;OpenHIE&quot;: 'https://openhie.org'
codesystem &quot;DAK Dispensing Quantity CS&quot;: 'https://path-global-health.github.io/MERindicators/CodeSystem/DAKDispensingQuantityCS'
codesystem &quot;DAK Coarse Age Range CS&quot;: 'https://path-global-health.github.io/MERindicators/CodeSystem/DAKCoarseAgeRangeCS'

// FHIR CS and VS
valueset &quot;HL7 Administrative Gender&quot;: 'http://hl7.org/fhir/ValueSet/administrative-gender'

// codes
// The display &quot;Pregnancy (finding)&quot; is not a valid display for the code {http://snomed.info/sct}77386006
code &quot;Pregnancy (finding)&quot;: '77386006' from &quot;SNOMED-CT&quot; display 'Pregnancy (finding)'
code &quot;Pregnant&quot;: '146789000' from &quot;SNOMED-CT&quot; display 'Pregnant'
// code &quot;Breastfeeding&quot;: '169750002' from &quot;SNOMED-CT&quot; display 'Breastfeeding'
code &quot;Prenatal initial visit (regime/therapy)&quot;: '424441002' from &quot;SNOMED-CT&quot; display 'Prenatal initial visit (regime/therapy)'
code &quot;Pregnancy status - Reported&quot;: '11449-6' from &quot;LOINC&quot; display 'Pregnancy status - Reported'
// code &quot;Livebirth (finding)&quot;: '281050002' from &quot;SNOMED-CT&quot; display 'Livebirth (finding)'
// code &quot;Postpartum state (finding)&quot;: '86569001' from &quot;SNOMED-CT&quot; display 'Postpartum state (finding)'
// code &quot;Normal breast feeding (finding)&quot;: '69840006' from &quot;SNOMED-CT&quot; display 'Normal breast feeding (finding)'
code &quot;Currently taking ARV&quot;: '160119' from &quot;CIEL&quot; display 'Currently taking ARV'
code &quot;Coded Answer&quot;: '1065' from &quot;CIEL&quot; display 'Yes'
code &quot;History of antiretroviral therapy (situation)&quot;: '432101000124108' from &quot;OpenHIE&quot; display 'History of antiretroviral therapy (situation)'

// code &quot;New on ART&quot;: 'new-on-art' from &quot;PMTCT ART Status Codes&quot; display 'New on ART'

// valuesets
valueset AgeRangesTXCURR: 'https://path-global-health.github.io/MERindicators/ValueSet/AgeRangesTXCURR'
// valueset &quot;HIV Testing Services&quot;: 'https://path-global-health.github.io/MERindicators/ValueSet/HIVTestingServices' // Should use HIV tests
// viral load tests, results
// commenting out for now and the union
// valueset &quot;Human Immunodeficiency Virus (HIV) Laboratory Test Codes (Ab and Ag)&quot;: 'urn:oid:2.16.840.1.113762.1.4.1056.50' // Used by CMS349
valueset &quot;Viral Load Test&quot;: 'https://path-global-health.github.io/MERindicators/ValueSet/ViralLoadTest'
valueset &quot;DAK PLHIV&quot;: 'https://path-global-health.github.io/MERindicators/ValueSet/DAKPLHIV'
valueset &quot;DAK MMD&quot;: 'https://path-global-health.github.io/MERindicators/ValueSet/DAKMMD'
valueset &quot;DAK On ART&quot;: 'https://path-global-health.github.io/MERindicators/ValueSet/DAKONART'
valueset &quot;DAK HIV Transfer In&quot;: 'https://path-global-health.github.io/MERindicators/ValueSet/DAKHIVTransfer'
valueset &quot;DAK ARV Drug Pickup&quot;: 'https://path-global-health.github.io/MERindicators/ValueSet/DAKARVDrugPickup'
valueset &quot;DAK ART Medications&quot;: 'https://path-global-health.github.io/MERindicators/ValueSet/DAKARTMeds'
valueset &quot;DAK Dispensing Quantity&quot;: 'https://path-global-health.github.io/MERindicators/ValueSet/DAKDispensingQuantity'
valueset &quot;DAK Coarse Age Range&quot;: 'https://path-global-health.github.io/MERindicators/ValueSet/DAKCoarseAgeRange'
valueset &quot;DAK ART Stopped&quot;: 'https://path-global-health.github.io/MERindicators/ValueSet/DAKARTStop'
valueset &quot;DAK HIV Transferred&quot;: 'https://path-global-health.github.io/MERindicators/ValueSet/DAKHIVTransfer'



</code></pre><p><code>Content not shown - (</code><code>application/elm+xml</code>, size = 16Kb)</p><p><code>Content not shown - (</code><code>application/elm+json</code>, size = 25Kb)</p></div>
  </text>
  <url value="https://path-global-health.github.io/MERindicators/Library/DAKConcepts"/>
  <version value="0.1.0"/>
  <name value="DAKConcepts"/>
  <title value="DAKConcepts"/>
  <status value="draft"/>
  <experimental value="true"/>
  <type>
    <coding>
      <system value="http://terminology.hl7.org/CodeSystem/library-type"/>
      <code value="logic-library"/>
    </coding>
  </type>
  <date value="2023-10-19T20:59:19+00:00"/>
  <publisher value="PATH"/>
  <contact>
    <name value="PATH"/>
    <telecom>
      <system value="url"/>
      <value value="https://www.path.org"/>
    </telecom>
    <telecom>
      <system value="email"/>
      <value value="info@path.org"/>
    </telecom>
  </contact>
  <contact>
    <name value="PATH"/>
    <telecom>
      <system value="email"/>
      <value value="info@path.org"/>
      <use value="work"/>
    </telecom>
  </contact>
  <description value="DAKConcepts"/>
  <jurisdiction>
    <coding>
      <system value="http://unstats.un.org/unsd/methods/m49/m49.htm"/>
      <code value="001"/>
      <display value="World"/>
    </coding>
  </jurisdiction>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="http://hl7.org/fhir/Library/FHIR-ModelInfo|4.0.1"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="http://hl7.org/fhir/Library/FHIRHelpers|4.0.1"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="https://path-global-health.github.io/MERindicators/Library/FHIRCommon|4.0.1"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="http://snomed.info/sct"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="http://loinc.org"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="http://www.nlm.nih.gov/research/umls/rxnorm"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="http://hl7.org/fhir/sid/icd-11"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="https://openconceptlab.org/orgs/CIEL/sources/CIEL"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="https://openhie.org"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="https://path-global-health.github.io/MERindicators/CodeSystem/DAKDispensingQuantityCS"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="https://path-global-health.github.io/MERindicators/CodeSystem/DAKCoarseAgeRangeCS"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="http://hl7.org/fhir/ValueSet/administrative-gender"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="https://path-global-health.github.io/MERindicators/ValueSet/AgeRangesTXCURR"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="https://path-global-health.github.io/MERindicators/ValueSet/ViralLoadTest"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="https://path-global-health.github.io/MERindicators/ValueSet/DAKPLHIV"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="https://path-global-health.github.io/MERindicators/ValueSet/DAKMMD"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="https://path-global-health.github.io/MERindicators/ValueSet/DAKONART"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="https://path-global-health.github.io/MERindicators/ValueSet/DAKHIVTransfer"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="https://path-global-health.github.io/MERindicators/ValueSet/DAKARVDrugPickup"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="https://path-global-health.github.io/MERindicators/ValueSet/DAKARTMeds"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="https://path-global-health.github.io/MERindicators/ValueSet/DAKDispensingQuantity"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="https://path-global-health.github.io/MERindicators/ValueSet/DAKCoarseAgeRange"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="https://path-global-health.github.io/MERindicators/ValueSet/DAKARTStop"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="https://path-global-health.github.io/MERindicators/ValueSet/DAKHIVTransfer"/>
  </relatedArtifact>
  <content>
    <contentType value="text/cql"/>
    <data value="bGlicmFyeSBEQUtDb25jZXB0cyB2ZXJzaW9uICcwLjEuMCcKCnVzaW5nIEZISVIgdmVyc2lvbiAnNC4wLjEnCgppbmNsdWRlIEZISVJIZWxwZXJzIHZlcnNpb24gJzQuMC4xJwppbmNsdWRlIEZISVJDb21tb24gdmVyc2lvbiAnNC4wLjEnIGNhbGxlZCBGQwoKLy8gY29kZXN5c3RlbXMKY29kZXN5c3RlbSAiU05PTUVELUNUIjogJ2h0dHA6Ly9zbm9tZWQuaW5mby9zY3QnCmNvZGVzeXN0ZW0gIkxPSU5DIjogJ2h0dHA6Ly9sb2luYy5vcmcnCmNvZGVzeXN0ZW0gIlJ4Tm9ybSI6ICdodHRwOi8vd3d3Lm5sbS5uaWguZ292L3Jlc2VhcmNoL3VtbHMvcnhub3JtJwpjb2Rlc3lzdGVtICJJQ0QtMTEiOiAnaHR0cDovL2hsNy5vcmcvZmhpci9zaWQvaWNkLTExJwoKLy8gbG9jYWwgY29kZXN5c3RlbXMKY29kZXN5c3RlbSAiQ0lFTCI6ICdodHRwczovL29wZW5jb25jZXB0bGFiLm9yZy9vcmdzL0NJRUwvc291cmNlcy9DSUVMJwpjb2Rlc3lzdGVtICJPcGVuSElFIjogJ2h0dHBzOi8vb3BlbmhpZS5vcmcnCmNvZGVzeXN0ZW0gIkRBSyBEaXNwZW5zaW5nIFF1YW50aXR5IENTIjogJ2h0dHBzOi8vcGF0aC1nbG9iYWwtaGVhbHRoLmdpdGh1Yi5pby9NRVJpbmRpY2F0b3JzL0NvZGVTeXN0ZW0vREFLRGlzcGVuc2luZ1F1YW50aXR5Q1MnCmNvZGVzeXN0ZW0gIkRBSyBDb2Fyc2UgQWdlIFJhbmdlIENTIjogJ2h0dHBzOi8vcGF0aC1nbG9iYWwtaGVhbHRoLmdpdGh1Yi5pby9NRVJpbmRpY2F0b3JzL0NvZGVTeXN0ZW0vREFLQ29hcnNlQWdlUmFuZ2VDUycKCi8vIEZISVIgQ1MgYW5kIFZTCnZhbHVlc2V0ICJITDcgQWRtaW5pc3RyYXRpdmUgR2VuZGVyIjogJ2h0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvYWRtaW5pc3RyYXRpdmUtZ2VuZGVyJwoKLy8gY29kZXMKLy8gVGhlIGRpc3BsYXkgIlByZWduYW5jeSAoZmluZGluZykiIGlzIG5vdCBhIHZhbGlkIGRpc3BsYXkgZm9yIHRoZSBjb2RlIHtodHRwOi8vc25vbWVkLmluZm8vc2N0fTc3Mzg2MDA2CmNvZGUgIlByZWduYW5jeSAoZmluZGluZykiOiAnNzczODYwMDYnIGZyb20gIlNOT01FRC1DVCIgZGlzcGxheSAnUHJlZ25hbmN5IChmaW5kaW5nKScKY29kZSAiUHJlZ25hbnQiOiAnMTQ2Nzg5MDAwJyBmcm9tICJTTk9NRUQtQ1QiIGRpc3BsYXkgJ1ByZWduYW50JwovLyBjb2RlICJCcmVhc3RmZWVkaW5nIjogJzE2OTc1MDAwMicgZnJvbSAiU05PTUVELUNUIiBkaXNwbGF5ICdCcmVhc3RmZWVkaW5nJwpjb2RlICJQcmVuYXRhbCBpbml0aWFsIHZpc2l0IChyZWdpbWUvdGhlcmFweSkiOiAnNDI0NDQxMDAyJyBmcm9tICJTTk9NRUQtQ1QiIGRpc3BsYXkgJ1ByZW5hdGFsIGluaXRpYWwgdmlzaXQgKHJlZ2ltZS90aGVyYXB5KScKY29kZSAiUHJlZ25hbmN5IHN0YXR1cyAtIFJlcG9ydGVkIjogJzExNDQ5LTYnIGZyb20gIkxPSU5DIiBkaXNwbGF5ICdQcmVnbmFuY3kgc3RhdHVzIC0gUmVwb3J0ZWQnCi8vIGNvZGUgIkxpdmViaXJ0aCAoZmluZGluZykiOiAnMjgxMDUwMDAyJyBmcm9tICJTTk9NRUQtQ1QiIGRpc3BsYXkgJ0xpdmViaXJ0aCAoZmluZGluZyknCi8vIGNvZGUgIlBvc3RwYXJ0dW0gc3RhdGUgKGZpbmRpbmcpIjogJzg2NTY5MDAxJyBmcm9tICJTTk9NRUQtQ1QiIGRpc3BsYXkgJ1Bvc3RwYXJ0dW0gc3RhdGUgKGZpbmRpbmcpJwovLyBjb2RlICJOb3JtYWwgYnJlYXN0IGZlZWRpbmcgKGZpbmRpbmcpIjogJzY5ODQwMDA2JyBmcm9tICJTTk9NRUQtQ1QiIGRpc3BsYXkgJ05vcm1hbCBicmVhc3QgZmVlZGluZyAoZmluZGluZyknCmNvZGUgIkN1cnJlbnRseSB0YWtpbmcgQVJWIjogJzE2MDExOScgZnJvbSAiQ0lFTCIgZGlzcGxheSAnQ3VycmVudGx5IHRha2luZyBBUlYnCmNvZGUgIkNvZGVkIEFuc3dlciI6ICcxMDY1JyBmcm9tICJDSUVMIiBkaXNwbGF5ICdZZXMnCmNvZGUgIkhpc3Rvcnkgb2YgYW50aXJldHJvdmlyYWwgdGhlcmFweSAoc2l0dWF0aW9uKSI6ICc0MzIxMDEwMDAxMjQxMDgnIGZyb20gIk9wZW5ISUUiIGRpc3BsYXkgJ0hpc3Rvcnkgb2YgYW50aXJldHJvdmlyYWwgdGhlcmFweSAoc2l0dWF0aW9uKScKCi8vIGNvZGUgIk5ldyBvbiBBUlQiOiAnbmV3LW9uLWFydCcgZnJvbSAiUE1UQ1QgQVJUIFN0YXR1cyBDb2RlcyIgZGlzcGxheSAnTmV3IG9uIEFSVCcKCi8vIHZhbHVlc2V0cwp2YWx1ZXNldCBBZ2VSYW5nZXNUWENVUlI6ICdodHRwczovL3BhdGgtZ2xvYmFsLWhlYWx0aC5naXRodWIuaW8vTUVSaW5kaWNhdG9ycy9WYWx1ZVNldC9BZ2VSYW5nZXNUWENVUlInCi8vIHZhbHVlc2V0ICJISVYgVGVzdGluZyBTZXJ2aWNlcyI6ICdodHRwczovL3BhdGgtZ2xvYmFsLWhlYWx0aC5naXRodWIuaW8vTUVSaW5kaWNhdG9ycy9WYWx1ZVNldC9ISVZUZXN0aW5nU2VydmljZXMnIC8vIFNob3VsZCB1c2UgSElWIHRlc3RzCi8vIHZpcmFsIGxvYWQgdGVzdHMsIHJlc3VsdHMKLy8gY29tbWVudGluZyBvdXQgZm9yIG5vdyBhbmQgdGhlIHVuaW9uCi8vIHZhbHVlc2V0ICJIdW1hbiBJbW11bm9kZWZpY2llbmN5IFZpcnVzIChISVYpIExhYm9yYXRvcnkgVGVzdCBDb2RlcyAoQWIgYW5kIEFnKSI6ICd1cm46b2lkOjIuMTYuODQwLjEuMTEzNzYyLjEuNC4xMDU2LjUwJyAvLyBVc2VkIGJ5IENNUzM0OQp2YWx1ZXNldCAiVmlyYWwgTG9hZCBUZXN0IjogJ2h0dHBzOi8vcGF0aC1nbG9iYWwtaGVhbHRoLmdpdGh1Yi5pby9NRVJpbmRpY2F0b3JzL1ZhbHVlU2V0L1ZpcmFsTG9hZFRlc3QnCnZhbHVlc2V0ICJEQUsgUExISVYiOiAnaHR0cHM6Ly9wYXRoLWdsb2JhbC1oZWFsdGguZ2l0aHViLmlvL01FUmluZGljYXRvcnMvVmFsdWVTZXQvREFLUExISVYnCnZhbHVlc2V0ICJEQUsgTU1EIjogJ2h0dHBzOi8vcGF0aC1nbG9iYWwtaGVhbHRoLmdpdGh1Yi5pby9NRVJpbmRpY2F0b3JzL1ZhbHVlU2V0L0RBS01NRCcKdmFsdWVzZXQgIkRBSyBPbiBBUlQiOiAnaHR0cHM6Ly9wYXRoLWdsb2JhbC1oZWFsdGguZ2l0aHViLmlvL01FUmluZGljYXRvcnMvVmFsdWVTZXQvREFLT05BUlQnCnZhbHVlc2V0ICJEQUsgSElWIFRyYW5zZmVyIEluIjogJ2h0dHBzOi8vcGF0aC1nbG9iYWwtaGVhbHRoLmdpdGh1Yi5pby9NRVJpbmRpY2F0b3JzL1ZhbHVlU2V0L0RBS0hJVlRyYW5zZmVyJwp2YWx1ZXNldCAiREFLIEFSViBEcnVnIFBpY2t1cCI6ICdodHRwczovL3BhdGgtZ2xvYmFsLWhlYWx0aC5naXRodWIuaW8vTUVSaW5kaWNhdG9ycy9WYWx1ZVNldC9EQUtBUlZEcnVnUGlja3VwJwp2YWx1ZXNldCAiREFLIEFSVCBNZWRpY2F0aW9ucyI6ICdodHRwczovL3BhdGgtZ2xvYmFsLWhlYWx0aC5naXRodWIuaW8vTUVSaW5kaWNhdG9ycy9WYWx1ZVNldC9EQUtBUlRNZWRzJwp2YWx1ZXNldCAiREFLIERpc3BlbnNpbmcgUXVhbnRpdHkiOiAnaHR0cHM6Ly9wYXRoLWdsb2JhbC1oZWFsdGguZ2l0aHViLmlvL01FUmluZGljYXRvcnMvVmFsdWVTZXQvREFLRGlzcGVuc2luZ1F1YW50aXR5Jwp2YWx1ZXNldCAiREFLIENvYXJzZSBBZ2UgUmFuZ2UiOiAnaHR0cHM6Ly9wYXRoLWdsb2JhbC1oZWFsdGguZ2l0aHViLmlvL01FUmluZGljYXRvcnMvVmFsdWVTZXQvREFLQ29hcnNlQWdlUmFuZ2UnCnZhbHVlc2V0ICJEQUsgQVJUIFN0b3BwZWQiOiAnaHR0cHM6Ly9wYXRoLWdsb2JhbC1oZWFsdGguZ2l0aHViLmlvL01FUmluZGljYXRvcnMvVmFsdWVTZXQvREFLQVJUU3RvcCcKdmFsdWVzZXQgIkRBSyBISVYgVHJhbnNmZXJyZWQiOiAnaHR0cHM6Ly9wYXRoLWdsb2JhbC1oZWFsdGguZ2l0aHViLmlvL01FUmluZGljYXRvcnMvVmFsdWVTZXQvREFLSElWVHJhbnNmZXInCgoKCg=="/>
  </content>
  <content>
    <contentType value="application/elm+xml"/>
    <data value="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGxpYnJhcnkgeG1sbnM9InVybjpobDctb3JnOmVsbTpyMSIgeG1sbnM6dD0idXJuOmhsNy1vcmc6ZWxtLXR5cGVzOnIxIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiB4bWxuczp4c2Q9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiB4bWxuczpmaGlyPSJodHRwOi8vaGw3Lm9yZy9maGlyIiB4bWxuczpxZG00Mz0idXJuOmhlYWx0aGl0LWdvdjpxZG06djRfMyIgeG1sbnM6cWRtNTM9InVybjpoZWFsdGhpdC1nb3Y6cWRtOnY1XzMiIHhtbG5zOmE9InVybjpobDctb3JnOmNxbC1hbm5vdGF0aW9uczpyMSI+CiAgIDxhbm5vdGF0aW9uIHRyYW5zbGF0b3JPcHRpb25zPSJFbmFibGVBbm5vdGF0aW9ucyxFbmFibGVMb2NhdG9ycyxFbmFibGVSZXN1bHRUeXBlcyxEaXNhYmxlTGlzdERlbW90aW9uLERpc2FibGVMaXN0UHJvbW90aW9uIiB4c2k6dHlwZT0iYTpDcWxUb0VsbUluZm8iLz4KICAgPGFubm90YXRpb24geHNpOnR5cGU9ImE6QW5ub3RhdGlvbiI+CiAgICAgIDxhOnMgcj0iMzgiPgogICAgICAgICA8YTpzPmxpYnJhcnkgREFLQ29uY2VwdHMgdmVyc2lvbiAnMC4xLjAnPC9hOnM+CiAgICAgIDwvYTpzPgogICA8L2Fubm90YXRpb24+CiAgIDxpZGVudGlmaWVyIGlkPSJEQUtDb25jZXB0cyIgc3lzdGVtPSJodHRwczovL3BhdGgtZ2xvYmFsLWhlYWx0aC5naXRodWIuaW8vTUVSaW5kaWNhdG9ycyIgdmVyc2lvbj0iMC4xLjAiLz4KICAgPHNjaGVtYUlkZW50aWZpZXIgaWQ9InVybjpobDctb3JnOmVsbSIgdmVyc2lvbj0icjEiLz4KICAgPHVzaW5ncz4KICAgICAgPGRlZiBsb2NhbElkZW50aWZpZXI9IlN5c3RlbSIgdXJpPSJ1cm46aGw3LW9yZzplbG0tdHlwZXM6cjEiLz4KICAgICAgPGRlZiBsb2NhbElkPSIxIiBsb2NhdG9yPSIzOjEtMzoyNiIgbG9jYWxJZGVudGlmaWVyPSJGSElSIiB1cmk9Imh0dHA6Ly9obDcub3JnL2ZoaXIiIHZlcnNpb249IjQuMC4xIj4KICAgICAgICAgPGFubm90YXRpb24geHNpOnR5cGU9ImE6QW5ub3RhdGlvbiI+CiAgICAgICAgICAgIDxhOnMgcj0iMSI+CiAgICAgICAgICAgICAgIDxhOnM+dXNpbmcgPC9hOnM+CiAgICAgICAgICAgICAgIDxhOnM+CiAgICAgICAgICAgICAgICAgIDxhOnM+RkhJUjwvYTpzPgogICAgICAgICAgICAgICA8L2E6cz4KICAgICAgICAgICAgICAgPGE6cz4gdmVyc2lvbiAnNC4wLjEnPC9hOnM+CiAgICAgICAgICAgIDwvYTpzPgogICAgICAgICA8L2Fubm90YXRpb24+CiAgICAgIDwvZGVmPgogICA8L3VzaW5ncz4KICAgPGluY2x1ZGVzPgogICAgICA8ZGVmIGxvY2FsSWQ9IjIiIGxvY2F0b3I9IjU6MS01OjM1IiBsb2NhbElkZW50aWZpZXI9IkZISVJIZWxwZXJzIiBwYXRoPSJodHRwczovL3BhdGgtZ2xvYmFsLWhlYWx0aC5naXRodWIuaW8vTUVSaW5kaWNhdG9ycy9GSElSSGVscGVycyIgdmVyc2lvbj0iNC4wLjEiPgogICAgICAgICA8YW5ub3RhdGlvbiB4c2k6dHlwZT0iYTpBbm5vdGF0aW9uIj4KICAgICAgICAgICAgPGE6cyByPSIyIj4KICAgICAgICAgICAgICAgPGE6cz5pbmNsdWRlIDwvYTpzPgogICAgICAgICAgICAgICA8YTpzPgogICAgICAgICAgICAgICAgICA8YTpzPkZISVJIZWxwZXJzPC9hOnM+CiAgICAgICAgICAgICAgIDwvYTpzPgogICAgICAgICAgICAgICA8YTpzPiB2ZXJzaW9uICc0LjAuMSc8L2E6cz4KICAgICAgICAgICAgPC9hOnM+CiAgICAgICAgIDwvYW5ub3RhdGlvbj4KICAgICAgPC9kZWY+CiAgICAgIDxkZWYgbG9jYWxJZD0iMyIgbG9jYXRvcj0iNjoxLTY6NDQiIGxvY2FsSWRlbnRpZmllcj0iRkMiIHBhdGg9Imh0dHBzOi8vcGF0aC1nbG9iYWwtaGVhbHRoLmdpdGh1Yi5pby9NRVJpbmRpY2F0b3JzL0ZISVJDb21tb24iIHZlcnNpb249IjQuMC4xIj4KICAgICAgICAgPGFubm90YXRpb24geHNpOnR5cGU9ImE6QW5ub3RhdGlvbiI+CiAgICAgICAgICAgIDxhOnMgcj0iMyI+CiAgICAgICAgICAgICAgIDxhOnM+aW5jbHVkZSA8L2E6cz4KICAgICAgICAgICAgICAgPGE6cz4KICAgICAgICAgICAgICAgICAgPGE6cz5GSElSQ29tbW9uPC9hOnM+CiAgICAgICAgICAgICAgIDwvYTpzPgogICAgICAgICAgICAgICA8YTpzPiB2ZXJzaW9uICc0LjAuMScgY2FsbGVkIEZDPC9hOnM+CiAgICAgICAgICAgIDwvYTpzPgogICAgICAgICA8L2Fubm90YXRpb24+CiAgICAgIDwvZGVmPgogICA8L2luY2x1ZGVzPgogICA8Y29kZVN5c3RlbXM+CiAgICAgIDxkZWYgbG9jYWxJZD0iNCIgbG9jYXRvcj0iOToxLTk6NDgiIHJlc3VsdFR5cGVOYW1lPSJ0OkNvZGVTeXN0ZW0iIG5hbWU9IlNOT01FRC1DVCIgaWQ9Imh0dHA6Ly9zbm9tZWQuaW5mby9zY3QiIGFjY2Vzc0xldmVsPSJQdWJsaWMiPgogICAgICAgICA8YW5ub3RhdGlvbiB4c2k6dHlwZT0iYTpBbm5vdGF0aW9uIj4KICAgICAgICAgICAgPGE6cyByPSI0Ij4KICAgICAgICAgICAgICAgPGE6cz4vLyBjb2Rlc3lzdGVtcwpjb2Rlc3lzdGVtICZxdW90O1NOT01FRC1DVCZxdW90OzogJ2h0dHA6Ly9zbm9tZWQuaW5mby9zY3QnPC9hOnM+CiAgICAgICAgICAgIDwvYTpzPgogICAgICAgICA8L2Fubm90YXRpb24+CiAgICAgIDwvZGVmPgogICAgICA8ZGVmIGxvY2FsSWQ9IjUiIGxvY2F0b3I9IjEwOjEtMTA6MzgiIHJlc3VsdFR5cGVOYW1lPSJ0OkNvZGVTeXN0ZW0iIG5hbWU9IkxPSU5DIiBpZD0iaHR0cDovL2xvaW5jLm9yZyIgYWNjZXNzTGV2ZWw9IlB1YmxpYyI+CiAgICAgICAgIDxhbm5vdGF0aW9uIHhzaTp0eXBlPSJhOkFubm90YXRpb24iPgogICAgICAgICAgICA8YTpzIHI9IjUiPgogICAgICAgICAgICAgICA8YTpzPmNvZGVzeXN0ZW0gJnF1b3Q7TE9JTkMmcXVvdDs6ICdodHRwOi8vbG9pbmMub3JnJzwvYTpzPgogICAgICAgICAgICA8L2E6cz4KICAgICAgICAgPC9hbm5vdGF0aW9uPgogICAgICA8L2RlZj4KICAgICAgPGRlZiBsb2NhbElkPSI2IiBsb2NhdG9yPSIxMToxLTExOjY2IiByZXN1bHRUeXBlTmFtZT0idDpDb2RlU3lzdGVtIiBuYW1lPSJSeE5vcm0iIGlkPSJodHRwOi8vd3d3Lm5sbS5uaWguZ292L3Jlc2VhcmNoL3VtbHMvcnhub3JtIiBhY2Nlc3NMZXZlbD0iUHVibGljIj4KICAgICAgICAgPGFubm90YXRpb24geHNpOnR5cGU9ImE6QW5ub3RhdGlvbiI+CiAgICAgICAgICAgIDxhOnMgcj0iNiI+CiAgICAgICAgICAgICAgIDxhOnM+Y29kZXN5c3RlbSAmcXVvdDtSeE5vcm0mcXVvdDs6ICdodHRwOi8vd3d3Lm5sbS5uaWguZ292L3Jlc2VhcmNoL3VtbHMvcnhub3JtJzwvYTpzPgogICAgICAgICAgICA8L2E6cz4KICAgICAgICAgPC9hbm5vdGF0aW9uPgogICAgICA8L2RlZj4KICAgICAgPGRlZiBsb2NhbElkPSI3IiBsb2NhdG9yPSIxMjoxLTEyOjUzIiByZXN1bHRUeXBlTmFtZT0idDpDb2RlU3lzdGVtIiBuYW1lPSJJQ0QtMTEiIGlkPSJodHRwOi8vaGw3Lm9yZy9maGlyL3NpZC9pY2QtMTEiIGFjY2Vzc0xldmVsPSJQdWJsaWMiPgogICAgICAgICA8YW5ub3RhdGlvbiB4c2k6dHlwZT0iYTpBbm5vdGF0aW9uIj4KICAgICAgICAgICAgPGE6cyByPSI3Ij4KICAgICAgICAgICAgICAgPGE6cz5jb2Rlc3lzdGVtICZxdW90O0lDRC0xMSZxdW90OzogJ2h0dHA6Ly9obDcub3JnL2ZoaXIvc2lkL2ljZC0xMSc8L2E6cz4KICAgICAgICAgICAgPC9hOnM+CiAgICAgICAgIDwvYW5ub3RhdGlvbj4KICAgICAgPC9kZWY+CiAgICAgIDxkZWYgbG9jYWxJZD0iOCIgbG9jYXRvcj0iMTU6MS0xNTo3MCIgcmVzdWx0VHlwZU5hbWU9InQ6Q29kZVN5c3RlbSIgbmFtZT0iQ0lFTCIgaWQ9Imh0dHBzOi8vb3BlbmNvbmNlcHRsYWIub3JnL29yZ3MvQ0lFTC9zb3VyY2VzL0NJRUwiIGFjY2Vzc0xldmVsPSJQdWJsaWMiPgogICAgICAgICA8YW5ub3RhdGlvbiB4c2k6dHlwZT0iYTpBbm5vdGF0aW9uIj4KICAgICAgICAgICAgPGE6cyByPSI4Ij4KICAgICAgICAgICAgICAgPGE6cz4vLyBsb2NhbCBjb2Rlc3lzdGVtcwpjb2Rlc3lzdGVtICZxdW90O0NJRUwmcXVvdDs6ICdodHRwczovL29wZW5jb25jZXB0bGFiLm9yZy9vcmdzL0NJRUwvc291cmNlcy9DSUVMJzwvYTpzPgogICAgICAgICAgICA8L2E6cz4KICAgICAgICAgPC9hbm5vdGF0aW9uPgogICAgICA8L2RlZj4KICAgICAgPGRlZiBsb2NhbElkPSI5IiBsb2NhdG9yPSIxNjoxLTE2OjQzIiByZXN1bHRUeXBlTmFtZT0idDpDb2RlU3lzdGVtIiBuYW1lPSJPcGVuSElFIiBpZD0iaHR0cHM6Ly9vcGVuaGllLm9yZyIgYWNjZXNzTGV2ZWw9IlB1YmxpYyI+CiAgICAgICAgIDxhbm5vdGF0aW9uIHhzaTp0eXBlPSJhOkFubm90YXRpb24iPgogICAgICAgICAgICA8YTpzIHI9IjkiPgogICAgICAgICAgICAgICA8YTpzPmNvZGVzeXN0ZW0gJnF1b3Q7T3BlbkhJRSZxdW90OzogJ2h0dHBzOi8vb3BlbmhpZS5vcmcnPC9hOnM+CiAgICAgICAgICAgIDwvYTpzPgogICAgICAgICA8L2Fubm90YXRpb24+CiAgICAgIDwvZGVmPgogICAgICA8ZGVmIGxvY2FsSWQ9IjEwIiBsb2NhdG9yPSIxNzoxLTE3OjEyOCIgcmVzdWx0VHlwZU5hbWU9InQ6Q29kZVN5c3RlbSIgbmFtZT0iREFLIERpc3BlbnNpbmcgUXVhbnRpdHkgQ1MiIGlkPSJodHRwczovL3BhdGgtZ2xvYmFsLWhlYWx0aC5naXRodWIuaW8vTUVSaW5kaWNhdG9ycy9Db2RlU3lzdGVtL0RBS0Rpc3BlbnNpbmdRdWFudGl0eUNTIiBhY2Nlc3NMZXZlbD0iUHVibGljIj4KICAgICAgICAgPGFubm90YXRpb24geHNpOnR5cGU9ImE6QW5ub3RhdGlvbiI+CiAgICAgICAgICAgIDxhOnMgcj0iMTAiPgogICAgICAgICAgICAgICA8YTpzPmNvZGVzeXN0ZW0gJnF1b3Q7REFLIERpc3BlbnNpbmcgUXVhbnRpdHkgQ1MmcXVvdDs6ICdodHRwczovL3BhdGgtZ2xvYmFsLWhlYWx0aC5naXRodWIuaW8vTUVSaW5kaWNhdG9ycy9Db2RlU3lzdGVtL0RBS0Rpc3BlbnNpbmdRdWFudGl0eUNTJzwvYTpzPgogICAgICAgICAgICA8L2E6cz4KICAgICAgICAgPC9hbm5vdGF0aW9uPgogICAgICA8L2RlZj4KICAgICAgPGRlZiBsb2NhbElkPSIxMSIgbG9jYXRvcj0iMTg6MS0xODoxMjEiIHJlc3VsdFR5cGVOYW1lPSJ0OkNvZGVTeXN0ZW0iIG5hbWU9IkRBSyBDb2Fyc2UgQWdlIFJhbmdlIENTIiBpZD0iaHR0cHM6Ly9wYXRoLWdsb2JhbC1oZWFsdGguZ2l0aHViLmlvL01FUmluZGljYXRvcnMvQ29kZVN5c3RlbS9EQUtDb2Fyc2VBZ2VSYW5nZUNTIiBhY2Nlc3NMZXZlbD0iUHVibGljIj4KICAgICAgICAgPGFubm90YXRpb24geHNpOnR5cGU9ImE6QW5ub3RhdGlvbiI+CiAgICAgICAgICAgIDxhOnMgcj0iMTEiPgogICAgICAgICAgICAgICA8YTpzPmNvZGVzeXN0ZW0gJnF1b3Q7REFLIENvYXJzZSBBZ2UgUmFuZ2UgQ1MmcXVvdDs6ICdodHRwczovL3BhdGgtZ2xvYmFsLWhlYWx0aC5naXRodWIuaW8vTUVSaW5kaWNhdG9ycy9Db2RlU3lzdGVtL0RBS0NvYXJzZUFnZVJhbmdlQ1MnPC9hOnM+CiAgICAgICAgICAgIDwvYTpzPgogICAgICAgICA8L2Fubm90YXRpb24+CiAgICAgIDwvZGVmPgogICA8L2NvZGVTeXN0ZW1zPgogICA8dmFsdWVTZXRzPgogICAgICA8ZGVmIGxvY2FsSWQ9IjEyIiBsb2NhdG9yPSIyMToxLTIxOjkwIiByZXN1bHRUeXBlTmFtZT0idDpWYWx1ZVNldCIgbmFtZT0iSEw3IEFkbWluaXN0cmF0aXZlIEdlbmRlciIgaWQ9Imh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvYWRtaW5pc3RyYXRpdmUtZ2VuZGVyIiBhY2Nlc3NMZXZlbD0iUHVibGljIj4KICAgICAgICAgPGFubm90YXRpb24geHNpOnR5cGU9ImE6QW5ub3RhdGlvbiI+CiAgICAgICAgICAgIDxhOnMgcj0iMTIiPgogICAgICAgICAgICAgICA8YTpzPi8vIEZISVIgQ1MgYW5kIFZTCnZhbHVlc2V0ICZxdW90O0hMNyBBZG1pbmlzdHJhdGl2ZSBHZW5kZXImcXVvdDs6ICdodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2FkbWluaXN0cmF0aXZlLWdlbmRlcic8L2E6cz4KICAgICAgICAgICAgPC9hOnM+CiAgICAgICAgIDwvYW5ub3RhdGlvbj4KICAgICAgPC9kZWY+CiAgICAgIDxkZWYgbG9jYWxJZD0iMjciIGxvY2F0b3I9IjQwOjEtNDA6MTAzIiByZXN1bHRUeXBlTmFtZT0idDpWYWx1ZVNldCIgbmFtZT0iQWdlUmFuZ2VzVFhDVVJSIiBpZD0iaHR0cHM6Ly9wYXRoLWdsb2JhbC1oZWFsdGguZ2l0aHViLmlvL01FUmluZGljYXRvcnMvVmFsdWVTZXQvQWdlUmFuZ2VzVFhDVVJSIiBhY2Nlc3NMZXZlbD0iUHVibGljIj4KICAgICAgICAgPGFubm90YXRpb24geHNpOnR5cGU9ImE6QW5ub3RhdGlvbiI+CiAgICAgICAgICAgIDxhOnMgcj0iMjciPgogICAgICAgICAgICAgICA8YTpzPi8vIGNvZGUgJnF1b3Q7TmV3IG9uIEFSVCZxdW90OzogJ25ldy1vbi1hcnQnIGZyb20gJnF1b3Q7UE1UQ1QgQVJUIFN0YXR1cyBDb2RlcyZxdW90OyBkaXNwbGF5ICdOZXcgb24gQVJUJwoKLy8gdmFsdWVzZXRzCnZhbHVlc2V0IEFnZVJhbmdlc1RYQ1VSUjogJ2h0dHBzOi8vcGF0aC1nbG9iYWwtaGVhbHRoLmdpdGh1Yi5pby9NRVJpbmRpY2F0b3JzL1ZhbHVlU2V0L0FnZVJhbmdlc1RYQ1VSUic8L2E6cz4KICAgICAgICAgICAgPC9hOnM+CiAgICAgICAgIDwvYW5ub3RhdGlvbj4KICAgICAgPC9kZWY+CiAgICAgIDxkZWYgbG9jYWxJZD0iMjgiIGxvY2F0b3I9IjQ1OjEtNDU6MTAzIiByZXN1bHRUeXBlTmFtZT0idDpWYWx1ZVNldCIgbmFtZT0iVmlyYWwgTG9hZCBUZXN0IiBpZD0iaHR0cHM6Ly9wYXRoLWdsb2JhbC1oZWFsdGguZ2l0aHViLmlvL01FUmluZGljYXRvcnMvVmFsdWVTZXQvVmlyYWxMb2FkVGVzdCIgYWNjZXNzTGV2ZWw9IlB1YmxpYyI+CiAgICAgICAgIDxhbm5vdGF0aW9uIHhzaTp0eXBlPSJhOkFubm90YXRpb24iPgogICAgICAgICAgICA8YTpzIHI9IjI4Ij4KICAgICAgICAgICAgICAgPGE6cz4vLyB2YWx1ZXNldCAmcXVvdDtISVYgVGVzdGluZyBTZXJ2aWNlcyZxdW90OzogJ2h0dHBzOi8vcGF0aC1nbG9iYWwtaGVhbHRoLmdpdGh1Yi5pby9NRVJpbmRpY2F0b3JzL1ZhbHVlU2V0L0hJVlRlc3RpbmdTZXJ2aWNlcycgLy8gU2hvdWxkIHVzZSBISVYgdGVzdHMKLy8gdmlyYWwgbG9hZCB0ZXN0cywgcmVzdWx0cwovLyBjb21tZW50aW5nIG91dCBmb3Igbm93IGFuZCB0aGUgdW5pb24KLy8gdmFsdWVzZXQgJnF1b3Q7SHVtYW4gSW1tdW5vZGVmaWNpZW5jeSBWaXJ1cyAoSElWKSBMYWJvcmF0b3J5IFRlc3QgQ29kZXMgKEFiIGFuZCBBZykmcXVvdDs6ICd1cm46b2lkOjIuMTYuODQwLjEuMTEzNzYyLjEuNC4xMDU2LjUwJyAvLyBVc2VkIGJ5IENNUzM0OQp2YWx1ZXNldCAmcXVvdDtWaXJhbCBMb2FkIFRlc3QmcXVvdDs6ICdodHRwczovL3BhdGgtZ2xvYmFsLWhlYWx0aC5naXRodWIuaW8vTUVSaW5kaWNhdG9ycy9WYWx1ZVNldC9WaXJhbExvYWRUZXN0JzwvYTpzPgogICAgICAgICAgICA8L2E6cz4KICAgICAgICAgPC9hbm5vdGF0aW9uPgogICAgICA8L2RlZj4KICAgICAgPGRlZiBsb2NhbElkPSIyOSIgbG9jYXRvcj0iNDY6MS00Njo5MiIgcmVzdWx0VHlwZU5hbWU9InQ6VmFsdWVTZXQiIG5hbWU9IkRBSyBQTEhJViIgaWQ9Imh0dHBzOi8vcGF0aC1nbG9iYWwtaGVhbHRoLmdpdGh1Yi5pby9NRVJpbmRpY2F0b3JzL1ZhbHVlU2V0L0RBS1BMSElWIiBhY2Nlc3NMZXZlbD0iUHVibGljIj4KICAgICAgICAgPGFubm90YXRpb24geHNpOnR5cGU9ImE6QW5ub3RhdGlvbiI+CiAgICAgICAgICAgIDxhOnMgcj0iMjkiPgogICAgICAgICAgICAgICA8YTpzPnZhbHVlc2V0ICZxdW90O0RBSyBQTEhJViZxdW90OzogJ2h0dHBzOi8vcGF0aC1nbG9iYWwtaGVhbHRoLmdpdGh1Yi5pby9NRVJpbmRpY2F0b3JzL1ZhbHVlU2V0L0RBS1BMSElWJzwvYTpzPgogICAgICAgICAgICA8L2E6cz4KICAgICAgICAgPC9hbm5vdGF0aW9uPgogICAgICA8L2RlZj4KICAgICAgPGRlZiBsb2NhbElkPSIzMCIgbG9jYXRvcj0iNDc6MS00Nzo4OCIgcmVzdWx0VHlwZU5hbWU9InQ6VmFsdWVTZXQiIG5hbWU9IkRBSyBNTUQiIGlkPSJodHRwczovL3BhdGgtZ2xvYmFsLWhlYWx0aC5naXRodWIuaW8vTUVSaW5kaWNhdG9ycy9WYWx1ZVNldC9EQUtNTUQiIGFjY2Vzc0xldmVsPSJQdWJsaWMiPgogICAgICAgICA8YW5ub3RhdGlvbiB4c2k6dHlwZT0iYTpBbm5vdGF0aW9uIj4KICAgICAgICAgICAgPGE6cyByPSIzMCI+CiAgICAgICAgICAgICAgIDxhOnM+dmFsdWVzZXQgJnF1b3Q7REFLIE1NRCZxdW90OzogJ2h0dHBzOi8vcGF0aC1nbG9iYWwtaGVhbHRoLmdpdGh1Yi5pby9NRVJpbmRpY2F0b3JzL1ZhbHVlU2V0L0RBS01NRCc8L2E6cz4KICAgICAgICAgICAgPC9hOnM+CiAgICAgICAgIDwvYW5ub3RhdGlvbj4KICAgICAgPC9kZWY+CiAgICAgIDxkZWYgbG9jYWxJZD0iMzEiIGxvY2F0b3I9IjQ4OjEtNDg6OTMiIHJlc3VsdFR5cGVOYW1lPSJ0OlZhbHVlU2V0IiBuYW1lPSJEQUsgT24gQVJUIiBpZD0iaHR0cHM6Ly9wYXRoLWdsb2JhbC1oZWFsdGguZ2l0aHViLmlvL01FUmluZGljYXRvcnMvVmFsdWVTZXQvREFLT05BUlQiIGFjY2Vzc0xldmVsPSJQdWJsaWMiPgogICAgICAgICA8YW5ub3RhdGlvbiB4c2k6dHlwZT0iYTpBbm5vdGF0aW9uIj4KICAgICAgICAgICAgPGE6cyByPSIzMSI+CiAgICAgICAgICAgICAgIDxhOnM+dmFsdWVzZXQgJnF1b3Q7REFLIE9uIEFSVCZxdW90OzogJ2h0dHBzOi8vcGF0aC1nbG9iYWwtaGVhbHRoLmdpdGh1Yi5pby9NRVJpbmRpY2F0b3JzL1ZhbHVlU2V0L0RBS09OQVJUJzwvYTpzPgogICAgICAgICAgICA8L2E6cz4KICAgICAgICAgPC9hbm5vdGF0aW9uPgogICAgICA8L2RlZj4KICAgICAgPGRlZiBsb2NhbElkPSIzMiIgbG9jYXRvcj0iNDk6MS00OToxMDgiIHJlc3VsdFR5cGVOYW1lPSJ0OlZhbHVlU2V0IiBuYW1lPSJEQUsgSElWIFRyYW5zZmVyIEluIiBpZD0iaHR0cHM6Ly9wYXRoLWdsb2JhbC1oZWFsdGguZ2l0aHViLmlvL01FUmluZGljYXRvcnMvVmFsdWVTZXQvREFLSElWVHJhbnNmZXIiIGFjY2Vzc0xldmVsPSJQdWJsaWMiPgogICAgICAgICA8YW5ub3RhdGlvbiB4c2k6dHlwZT0iYTpBbm5vdGF0aW9uIj4KICAgICAgICAgICAgPGE6cyByPSIzMiI+CiAgICAgICAgICAgICAgIDxhOnM+dmFsdWVzZXQgJnF1b3Q7REFLIEhJViBUcmFuc2ZlciBJbiZxdW90OzogJ2h0dHBzOi8vcGF0aC1nbG9iYWwtaGVhbHRoLmdpdGh1Yi5pby9NRVJpbmRpY2F0b3JzL1ZhbHVlU2V0L0RBS0hJVlRyYW5zZmVyJzwvYTpzPgogICAgICAgICAgICA8L2E6cz4KICAgICAgICAgPC9hbm5vdGF0aW9uPgogICAgICA8L2RlZj4KICAgICAgPGRlZiBsb2NhbElkPSIzMyIgbG9jYXRvcj0iNTA6MS01MDoxMTAiIHJlc3VsdFR5cGVOYW1lPSJ0OlZhbHVlU2V0IiBuYW1lPSJEQUsgQVJWIERydWcgUGlja3VwIiBpZD0iaHR0cHM6Ly9wYXRoLWdsb2JhbC1oZWFsdGguZ2l0aHViLmlvL01FUmluZGljYXRvcnMvVmFsdWVTZXQvREFLQVJWRHJ1Z1BpY2t1cCIgYWNjZXNzTGV2ZWw9IlB1YmxpYyI+CiAgICAgICAgIDxhbm5vdGF0aW9uIHhzaTp0eXBlPSJhOkFubm90YXRpb24iPgogICAgICAgICAgICA8YTpzIHI9IjMzIj4KICAgICAgICAgICAgICAgPGE6cz52YWx1ZXNldCAmcXVvdDtEQUsgQVJWIERydWcgUGlja3VwJnF1b3Q7OiAnaHR0cHM6Ly9wYXRoLWdsb2JhbC1oZWFsdGguZ2l0aHViLmlvL01FUmluZGljYXRvcnMvVmFsdWVTZXQvREFLQVJWRHJ1Z1BpY2t1cCc8L2E6cz4KICAgICAgICAgICAgPC9hOnM+CiAgICAgICAgIDwvYW5ub3RhdGlvbj4KICAgICAgPC9kZWY+CiAgICAgIDxkZWYgbG9jYWxJZD0iMzQiIGxvY2F0b3I9IjUxOjEtNTE6MTA0IiByZXN1bHRUeXBlTmFtZT0idDpWYWx1ZVNldCIgbmFtZT0iREFLIEFSVCBNZWRpY2F0aW9ucyIgaWQ9Imh0dHBzOi8vcGF0aC1nbG9iYWwtaGVhbHRoLmdpdGh1Yi5pby9NRVJpbmRpY2F0b3JzL1ZhbHVlU2V0L0RBS0FSVE1lZHMiIGFjY2Vzc0xldmVsPSJQdWJsaWMiPgogICAgICAgICA8YW5ub3RhdGlvbiB4c2k6dHlwZT0iYTpBbm5vdGF0aW9uIj4KICAgICAgICAgICAgPGE6cyByPSIzNCI+CiAgICAgICAgICAgICAgIDxhOnM+dmFsdWVzZXQgJnF1b3Q7REFLIEFSVCBNZWRpY2F0aW9ucyZxdW90OzogJ2h0dHBzOi8vcGF0aC1nbG9iYWwtaGVhbHRoLmdpdGh1Yi5pby9NRVJpbmRpY2F0b3JzL1ZhbHVlU2V0L0RBS0FSVE1lZHMnPC9hOnM+CiAgICAgICAgICAgIDwvYTpzPgogICAgICAgICA8L2Fubm90YXRpb24+CiAgICAgIDwvZGVmPgogICAgICA8ZGVmIGxvY2FsSWQ9IjM1IiBsb2NhdG9yPSI1MjoxLTUyOjExOSIgcmVzdWx0VHlwZU5hbWU9InQ6VmFsdWVTZXQiIG5hbWU9IkRBSyBEaXNwZW5zaW5nIFF1YW50aXR5IiBpZD0iaHR0cHM6Ly9wYXRoLWdsb2JhbC1oZWFsdGguZ2l0aHViLmlvL01FUmluZGljYXRvcnMvVmFsdWVTZXQvREFLRGlzcGVuc2luZ1F1YW50aXR5IiBhY2Nlc3NMZXZlbD0iUHVibGljIj4KICAgICAgICAgPGFubm90YXRpb24geHNpOnR5cGU9ImE6QW5ub3RhdGlvbiI+CiAgICAgICAgICAgIDxhOnMgcj0iMzUiPgogICAgICAgICAgICAgICA8YTpzPnZhbHVlc2V0ICZxdW90O0RBSyBEaXNwZW5zaW5nIFF1YW50aXR5JnF1b3Q7OiAnaHR0cHM6Ly9wYXRoLWdsb2JhbC1oZWFsdGguZ2l0aHViLmlvL01FUmluZGljYXRvcnMvVmFsdWVTZXQvREFLRGlzcGVuc2luZ1F1YW50aXR5JzwvYTpzPgogICAgICAgICAgICA8L2E6cz4KICAgICAgICAgPC9hbm5vdGF0aW9uPgogICAgICA8L2RlZj4KICAgICAgPGRlZiBsb2NhbElkPSIzNiIgbG9jYXRvcj0iNTM6MS01MzoxMTIiIHJlc3VsdFR5cGVOYW1lPSJ0OlZhbHVlU2V0IiBuYW1lPSJEQUsgQ29hcnNlIEFnZSBSYW5nZSIgaWQ9Imh0dHBzOi8vcGF0aC1nbG9iYWwtaGVhbHRoLmdpdGh1Yi5pby9NRVJpbmRpY2F0b3JzL1ZhbHVlU2V0L0RBS0NvYXJzZUFnZVJhbmdlIiBhY2Nlc3NMZXZlbD0iUHVibGljIj4KICAgICAgICAgPGFubm90YXRpb24geHNpOnR5cGU9ImE6QW5ub3RhdGlvbiI+CiAgICAgICAgICAgIDxhOnMgcj0iMzYiPgogICAgICAgICAgICAgICA8YTpzPnZhbHVlc2V0ICZxdW90O0RBSyBDb2Fyc2UgQWdlIFJhbmdlJnF1b3Q7OiAnaHR0cHM6Ly9wYXRoLWdsb2JhbC1oZWFsdGguZ2l0aHViLmlvL01FUmluZGljYXRvcnMvVmFsdWVTZXQvREFLQ29hcnNlQWdlUmFuZ2UnPC9hOnM+CiAgICAgICAgICAgIDwvYTpzPgogICAgICAgICA8L2Fubm90YXRpb24+CiAgICAgIDwvZGVmPgogICAgICA8ZGVmIGxvY2FsSWQ9IjM3IiBsb2NhdG9yPSI1NDoxLTU0OjEwMCIgcmVzdWx0VHlwZU5hbWU9InQ6VmFsdWVTZXQiIG5hbWU9IkRBSyBBUlQgU3RvcHBlZCIgaWQ9Imh0dHBzOi8vcGF0aC1nbG9iYWwtaGVhbHRoLmdpdGh1Yi5pby9NRVJpbmRpY2F0b3JzL1ZhbHVlU2V0L0RBS0FSVFN0b3AiIGFjY2Vzc0xldmVsPSJQdWJsaWMiPgogICAgICAgICA8YW5ub3RhdGlvbiB4c2k6dHlwZT0iYTpBbm5vdGF0aW9uIj4KICAgICAgICAgICAgPGE6cyByPSIzNyI+CiAgICAgICAgICAgICAgIDxhOnM+dmFsdWVzZXQgJnF1b3Q7REFLIEFSVCBTdG9wcGVkJnF1b3Q7OiAnaHR0cHM6Ly9wYXRoLWdsb2JhbC1oZWFsdGguZ2l0aHViLmlvL01FUmluZGljYXRvcnMvVmFsdWVTZXQvREFLQVJUU3RvcCc8L2E6cz4KICAgICAgICAgICAgPC9hOnM+CiAgICAgICAgIDwvYW5ub3RhdGlvbj4KICAgICAgPC9kZWY+CiAgICAgIDxkZWYgbG9jYWxJZD0iMzgiIGxvY2F0b3I9IjU1OjEtNTU6MTA4IiByZXN1bHRUeXBlTmFtZT0idDpWYWx1ZVNldCIgbmFtZT0iREFLIEhJViBUcmFuc2ZlcnJlZCIgaWQ9Imh0dHBzOi8vcGF0aC1nbG9iYWwtaGVhbHRoLmdpdGh1Yi5pby9NRVJpbmRpY2F0b3JzL1ZhbHVlU2V0L0RBS0hJVlRyYW5zZmVyIiBhY2Nlc3NMZXZlbD0iUHVibGljIj4KICAgICAgICAgPGFubm90YXRpb24geHNpOnR5cGU9ImE6QW5ub3RhdGlvbiI+CiAgICAgICAgICAgIDxhOnMgcj0iMzgiPgogICAgICAgICAgICAgICA8YTpzPnZhbHVlc2V0ICZxdW90O0RBSyBISVYgVHJhbnNmZXJyZWQmcXVvdDs6ICdodHRwczovL3BhdGgtZ2xvYmFsLWhlYWx0aC5naXRodWIuaW8vTUVSaW5kaWNhdG9ycy9WYWx1ZVNldC9EQUtISVZUcmFuc2Zlcic8L2E6cz4KICAgICAgICAgICAgPC9hOnM+CiAgICAgICAgIDwvYW5ub3RhdGlvbj4KICAgICAgPC9kZWY+CiAgIDwvdmFsdWVTZXRzPgogICA8Y29kZXM+CiAgICAgIDxkZWYgbG9jYWxJZD0iMTQiIGxvY2F0b3I9IjI1OjEtMjU6ODUiIHJlc3VsdFR5cGVOYW1lPSJ0OkNvZGUiIG5hbWU9IlByZWduYW5jeSAoZmluZGluZykiIGlkPSI3NzM4NjAwNiIgZGlzcGxheT0iUHJlZ25hbmN5IChmaW5kaW5nKSIgYWNjZXNzTGV2ZWw9IlB1YmxpYyI+CiAgICAgICAgIDxhbm5vdGF0aW9uIHhzaTp0eXBlPSJhOkFubm90YXRpb24iPgogICAgICAgICAgICA8YTpzIHI9IjE0Ij4KICAgICAgICAgICAgICAgPGE6cz4vLyBjb2RlcwovLyBUaGUgZGlzcGxheSAmcXVvdDtQcmVnbmFuY3kgKGZpbmRpbmcpJnF1b3Q7IGlzIG5vdCBhIHZhbGlkIGRpc3BsYXkgZm9yIHRoZSBjb2RlIHtodHRwOi8vc25vbWVkLmluZm8vc2N0fTc3Mzg2MDA2CmNvZGUgJnF1b3Q7UHJlZ25hbmN5IChmaW5kaW5nKSZxdW90OzogJzc3Mzg2MDA2JyBmcm9tIDwvYTpzPgogICAgICAgICAgICAgICA8YTpzIHI9IjEzIj4KICAgICAgICAgICAgICAgICAgPGE6cz4mcXVvdDtTTk9NRUQtQ1QmcXVvdDs8L2E6cz4KICAgICAgICAgICAgICAgPC9hOnM+CiAgICAgICAgICAgICAgIDxhOnM+IGRpc3BsYXkgJ1ByZWduYW5jeSAoZmluZGluZyknPC9hOnM+CiAgICAgICAgICAgIDwvYTpzPgogICAgICAgICA8L2Fubm90YXRpb24+CiAgICAgICAgIDxjb2RlU3lzdGVtIGxvY2FsSWQ9IjEzIiBsb2NhdG9yPSIyNTo0NS0yNTo1NSIgcmVzdWx0VHlwZU5hbWU9InQ6Q29kZVN5c3RlbSIgbmFtZT0iU05PTUVELUNUIi8+CiAgICAgIDwvZGVmPgogICAgICA8ZGVmIGxvY2FsSWQ9IjE2IiBsb2NhdG9yPSIyNjoxLTI2OjY0IiByZXN1bHRUeXBlTmFtZT0idDpDb2RlIiBuYW1lPSJQcmVnbmFudCIgaWQ9IjE0Njc4OTAwMCIgZGlzcGxheT0iUHJlZ25hbnQiIGFjY2Vzc0xldmVsPSJQdWJsaWMiPgogICAgICAgICA8YW5ub3RhdGlvbiB4c2k6dHlwZT0iYTpBbm5vdGF0aW9uIj4KICAgICAgICAgICAgPGE6cyByPSIxNiI+CiAgICAgICAgICAgICAgIDxhOnM+Y29kZSAmcXVvdDtQcmVnbmFudCZxdW90OzogJzE0Njc4OTAwMCcgZnJvbSA8L2E6cz4KICAgICAgICAgICAgICAgPGE6cyByPSIxNSI+CiAgICAgICAgICAgICAgICAgIDxhOnM+JnF1b3Q7U05PTUVELUNUJnF1b3Q7PC9hOnM+CiAgICAgICAgICAgICAgIDwvYTpzPgogICAgICAgICAgICAgICA8YTpzPiBkaXNwbGF5ICdQcmVnbmFudCc8L2E6cz4KICAgICAgICAgICAgPC9hOnM+CiAgICAgICAgIDwvYW5ub3RhdGlvbj4KICAgICAgICAgPGNvZGVTeXN0ZW0gbG9jYWxJZD0iMTUiIGxvY2F0b3I9IjI2OjM1LTI2OjQ1IiByZXN1bHRUeXBlTmFtZT0idDpDb2RlU3lzdGVtIiBuYW1lPSJTTk9NRUQtQ1QiLz4KICAgICAgPC9kZWY+CiAgICAgIDxkZWYgbG9jYWxJZD0iMTgiIGxvY2F0b3I9IjI4OjEtMjg6MTI2IiByZXN1bHRUeXBlTmFtZT0idDpDb2RlIiBuYW1lPSJQcmVuYXRhbCBpbml0aWFsIHZpc2l0IChyZWdpbWUvdGhlcmFweSkiIGlkPSI0MjQ0NDEwMDIiIGRpc3BsYXk9IlByZW5hdGFsIGluaXRpYWwgdmlzaXQgKHJlZ2ltZS90aGVyYXB5KSIgYWNjZXNzTGV2ZWw9IlB1YmxpYyI+CiAgICAgICAgIDxhbm5vdGF0aW9uIHhzaTp0eXBlPSJhOkFubm90YXRpb24iPgogICAgICAgICAgICA8YTpzIHI9IjE4Ij4KICAgICAgICAgICAgICAgPGE6cz4vLyBjb2RlICZxdW90O0JyZWFzdGZlZWRpbmcmcXVvdDs6ICcxNjk3NTAwMDInIGZyb20gJnF1b3Q7U05PTUVELUNUJnF1b3Q7IGRpc3BsYXkgJ0JyZWFzdGZlZWRpbmcnCmNvZGUgJnF1b3Q7UHJlbmF0YWwgaW5pdGlhbCB2aXNpdCAocmVnaW1lL3RoZXJhcHkpJnF1b3Q7OiAnNDI0NDQxMDAyJyBmcm9tIDwvYTpzPgogICAgICAgICAgICAgICA8YTpzIHI9IjE3Ij4KICAgICAgICAgICAgICAgICAgPGE6cz4mcXVvdDtTTk9NRUQtQ1QmcXVvdDs8L2E6cz4KICAgICAgICAgICAgICAgPC9hOnM+CiAgICAgICAgICAgICAgIDxhOnM+IGRpc3BsYXkgJ1ByZW5hdGFsIGluaXRpYWwgdmlzaXQgKHJlZ2ltZS90aGVyYXB5KSc8L2E6cz4KICAgICAgICAgICAgPC9hOnM+CiAgICAgICAgIDwvYW5ub3RhdGlvbj4KICAgICAgICAgPGNvZGVTeXN0ZW0gbG9jYWxJZD0iMTciIGxvY2F0b3I9IjI4OjY2LTI4Ojc2IiByZXN1bHRUeXBlTmFtZT0idDpDb2RlU3lzdGVtIiBuYW1lPSJTTk9NRUQtQ1QiLz4KICAgICAgPC9kZWY+CiAgICAgIDxkZWYgbG9jYWxJZD0iMjAiIGxvY2F0b3I9IjI5OjEtMjk6OTYiIHJlc3VsdFR5cGVOYW1lPSJ0OkNvZGUiIG5hbWU9IlByZWduYW5jeSBzdGF0dXMgLSBSZXBvcnRlZCIgaWQ9IjExNDQ5LTYiIGRpc3BsYXk9IlByZWduYW5jeSBzdGF0dXMgLSBSZXBvcnRlZCIgYWNjZXNzTGV2ZWw9IlB1YmxpYyI+CiAgICAgICAgIDxhbm5vdGF0aW9uIHhzaTp0eXBlPSJhOkFubm90YXRpb24iPgogICAgICAgICAgICA8YTpzIHI9IjIwIj4KICAgICAgICAgICAgICAgPGE6cz5jb2RlICZxdW90O1ByZWduYW5jeSBzdGF0dXMgLSBSZXBvcnRlZCZxdW90OzogJzExNDQ5LTYnIGZyb20gPC9hOnM+CiAgICAgICAgICAgICAgIDxhOnMgcj0iMTkiPgogICAgICAgICAgICAgICAgICA8YTpzPiZxdW90O0xPSU5DJnF1b3Q7PC9hOnM+CiAgICAgICAgICAgICAgIDwvYTpzPgogICAgICAgICAgICAgICA8YTpzPiBkaXNwbGF5ICdQcmVnbmFuY3kgc3RhdHVzIC0gUmVwb3J0ZWQnPC9hOnM+CiAgICAgICAgICAgIDwvYTpzPgogICAgICAgICA8L2Fubm90YXRpb24+CiAgICAgICAgIDxjb2RlU3lzdGVtIGxvY2FsSWQ9IjE5IiBsb2NhdG9yPSIyOTo1Mi0yOTo1OCIgcmVzdWx0VHlwZU5hbWU9InQ6Q29kZVN5c3RlbSIgbmFtZT0iTE9JTkMiLz4KICAgICAgPC9kZWY+CiAgICAgIDxkZWYgbG9jYWxJZD0iMjIiIGxvY2F0b3I9IjMzOjEtMzM6ODAiIHJlc3VsdFR5cGVOYW1lPSJ0OkNvZGUiIG5hbWU9IkN1cnJlbnRseSB0YWtpbmcgQVJWIiBpZD0iMTYwMTE5IiBkaXNwbGF5PSJDdXJyZW50bHkgdGFraW5nIEFSViIgYWNjZXNzTGV2ZWw9IlB1YmxpYyI+CiAgICAgICAgIDxhbm5vdGF0aW9uIHhzaTp0eXBlPSJhOkFubm90YXRpb24iPgogICAgICAgICAgICA8YTpzIHI9IjIyIj4KICAgICAgICAgICAgICAgPGE6cz4vLyBjb2RlICZxdW90O0xpdmViaXJ0aCAoZmluZGluZykmcXVvdDs6ICcyODEwNTAwMDInIGZyb20gJnF1b3Q7U05PTUVELUNUJnF1b3Q7IGRpc3BsYXkgJ0xpdmViaXJ0aCAoZmluZGluZyknCi8vIGNvZGUgJnF1b3Q7UG9zdHBhcnR1bSBzdGF0ZSAoZmluZGluZykmcXVvdDs6ICc4NjU2OTAwMScgZnJvbSAmcXVvdDtTTk9NRUQtQ1QmcXVvdDsgZGlzcGxheSAnUG9zdHBhcnR1bSBzdGF0ZSAoZmluZGluZyknCi8vIGNvZGUgJnF1b3Q7Tm9ybWFsIGJyZWFzdCBmZWVkaW5nIChmaW5kaW5nKSZxdW90OzogJzY5ODQwMDA2JyBmcm9tICZxdW90O1NOT01FRC1DVCZxdW90OyBkaXNwbGF5ICdOb3JtYWwgYnJlYXN0IGZlZWRpbmcgKGZpbmRpbmcpJwpjb2RlICZxdW90O0N1cnJlbnRseSB0YWtpbmcgQVJWJnF1b3Q7OiAnMTYwMTE5JyBmcm9tIDwvYTpzPgogICAgICAgICAgICAgICA8YTpzIHI9IjIxIj4KICAgICAgICAgICAgICAgICAgPGE6cz4mcXVvdDtDSUVMJnF1b3Q7PC9hOnM+CiAgICAgICAgICAgICAgIDwvYTpzPgogICAgICAgICAgICAgICA8YTpzPiBkaXNwbGF5ICdDdXJyZW50bHkgdGFraW5nIEFSVic8L2E6cz4KICAgICAgICAgICAgPC9hOnM+CiAgICAgICAgIDwvYW5ub3RhdGlvbj4KICAgICAgICAgPGNvZGVTeXN0ZW0gbG9jYWxJZD0iMjEiIGxvY2F0b3I9IjMzOjQ0LTMzOjQ5IiByZXN1bHRUeXBlTmFtZT0idDpDb2RlU3lzdGVtIiBuYW1lPSJDSUVMIi8+CiAgICAgIDwvZGVmPgogICAgICA8ZGVmIGxvY2FsSWQ9IjI0IiBsb2NhdG9yPSIzNDoxLTM0OjUzIiByZXN1bHRUeXBlTmFtZT0idDpDb2RlIiBuYW1lPSJDb2RlZCBBbnN3ZXIiIGlkPSIxMDY1IiBkaXNwbGF5PSJZZXMiIGFjY2Vzc0xldmVsPSJQdWJsaWMiPgogICAgICAgICA8YW5ub3RhdGlvbiB4c2k6dHlwZT0iYTpBbm5vdGF0aW9uIj4KICAgICAgICAgICAgPGE6cyByPSIyNCI+CiAgICAgICAgICAgICAgIDxhOnM+Y29kZSAmcXVvdDtDb2RlZCBBbnN3ZXImcXVvdDs6ICcxMDY1JyBmcm9tIDwvYTpzPgogICAgICAgICAgICAgICA8YTpzIHI9IjIzIj4KICAgICAgICAgICAgICAgICAgPGE6cz4mcXVvdDtDSUVMJnF1b3Q7PC9hOnM+CiAgICAgICAgICAgICAgIDwvYTpzPgogICAgICAgICAgICAgICA8YTpzPiBkaXNwbGF5ICdZZXMnPC9hOnM+CiAgICAgICAgICAgIDwvYTpzPgogICAgICAgICA8L2Fubm90YXRpb24+CiAgICAgICAgIDxjb2RlU3lzdGVtIGxvY2FsSWQ9IjIzIiBsb2NhdG9yPSIzNDozNC0zNDozOSIgcmVzdWx0VHlwZU5hbWU9InQ6Q29kZVN5c3RlbSIgbmFtZT0iQ0lFTCIvPgogICAgICA8L2RlZj4KICAgICAgPGRlZiBsb2NhbElkPSIyNiIgbG9jYXRvcj0iMzU6MS0zNToxNDIiIHJlc3VsdFR5cGVOYW1lPSJ0OkNvZGUiIG5hbWU9Ikhpc3Rvcnkgb2YgYW50aXJldHJvdmlyYWwgdGhlcmFweSAoc2l0dWF0aW9uKSIgaWQ9IjQzMjEwMTAwMDEyNDEwOCIgZGlzcGxheT0iSGlzdG9yeSBvZiBhbnRpcmV0cm92aXJhbCB0aGVyYXB5IChzaXR1YXRpb24pIiBhY2Nlc3NMZXZlbD0iUHVibGljIj4KICAgICAgICAgPGFubm90YXRpb24geHNpOnR5cGU9ImE6QW5ub3RhdGlvbiI+CiAgICAgICAgICAgIDxhOnMgcj0iMjYiPgogICAgICAgICAgICAgICA8YTpzPmNvZGUgJnF1b3Q7SGlzdG9yeSBvZiBhbnRpcmV0cm92aXJhbCB0aGVyYXB5IChzaXR1YXRpb24pJnF1b3Q7OiAnNDMyMTAxMDAwMTI0MTA4JyBmcm9tIDwvYTpzPgogICAgICAgICAgICAgICA8YTpzIHI9IjI1Ij4KICAgICAgICAgICAgICAgICAgPGE6cz4mcXVvdDtPcGVuSElFJnF1b3Q7PC9hOnM+CiAgICAgICAgICAgICAgIDwvYTpzPgogICAgICAgICAgICAgICA8YTpzPiBkaXNwbGF5ICdIaXN0b3J5IG9mIGFudGlyZXRyb3ZpcmFsIHRoZXJhcHkgKHNpdHVhdGlvbiknPC9hOnM+CiAgICAgICAgICAgIDwvYTpzPgogICAgICAgICA8L2Fubm90YXRpb24+CiAgICAgICAgIDxjb2RlU3lzdGVtIGxvY2FsSWQ9IjI1IiBsb2NhdG9yPSIzNTo3OC0zNTo4NiIgcmVzdWx0VHlwZU5hbWU9InQ6Q29kZVN5c3RlbSIgbmFtZT0iT3BlbkhJRSIvPgogICAgICA8L2RlZj4KICAgPC9jb2Rlcz4KPC9saWJyYXJ5Pgo="/>
  </content>
  <content>
    <contentType value="application/elm+json"/>
    <data value=""/>
  </content>
</Library>