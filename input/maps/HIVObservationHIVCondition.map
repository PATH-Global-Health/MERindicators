map "https://path-global-health.github.io/MERindicators/StructureMap/HIVObservationHIVCondition" = "HIVObservationHIVCondition"

uses "http://hl7.org/fhir/4.0/StructureDefinition/Bundle" alias bund as source
uses "http://hl7.org/fhir/4.0/StructureDefinition/Bundle" alias output as target



group HIVObservationHIVCondition(
    source src: bund,
    target tgt: output
) {

    src -> tgt.type = 'collection' "setBundleType";
    
    src.entry as entry, entry.resource : Patient as patient -> tgt.entry as tentry, tentry.resource = patient then {
      // patient, src.entry : Observation as obs where obs.code = cc("CIEL", "160540") and obs.subject = ("Patient/" & patient.id)  -> tgt.entry as newentry, uuid() as cid, create("Condition") as cond
      patient, src.entry as obsentry, obsentry.resource : Observation as obs, obs.code as code, code.coding as coding where obs.subject = ("Patient/" & patient.id) and coding.code = '160540' and coding.system = 'CIEL' 
        -> tgt.entry as newentry, uuid() as cid, create("Condition") as cond, create("Provenance") as prov 
      then {
        obs -> newentry.resource = cond "setResource";
        obs -> cond.id = cid "setConditionId";
        obs -> cond.code = cc( "SNOMED", "10232345" ) "setCode";
        // patient -> cond.subject = apppend("Patient/", patient.id) "setSubject";
        patient -> cond.subject = reference(patient) "setSubject";
        obs -> tgt.entry as proventry, proventry.resource = prov then {
            obs -> prov.target = ("Condition/" & cid) "setTarget";
            obs -> prov.entity as entity then {
              obs -> entity.role = "source" "setRole";
              obs -> entity.what = ("Observation/" & obs.id) "setWhat";
            } "setEntity";
        } "setProvenance";
      } "setCondition";
    } "copyPatient";
}


